---
  # TODO: Separate worker and broker roles
- hosts: drastic-jobs-hosts
  become: yes
  vars:
    runtime_user: indigo
    jobs_dir: /opt/drastic-jobs
    cli_dir: /opt/drastic-cli
  tasks:
    - apt_repository: repo='deb http://www.rabbitmq.com/debian/ testing main' state=present
    - apt_key: url=http://www.rabbitmq.com/rabbitmq-signing-key-public.asc state=present

    - name: Install Packages
      apt: pkg={{ item }} state=installed update_cache=yes allow_unauthenticated=yes
      with_items:
        - rabbitmq-server
        - python
        - python-dev
        - python-pip
        - python-lxml
        - libxml2-dev
        - libxslt-dev
        - git

    - name: Configure RabbitMQ
      template: src=rabbitmq.config.j2 dest=/etc/rabbitmq/rabbitmq.config

    - name: Enable and restart RabbitMQ
      service: name={{ item }} enabled=yes state=restarted
      with_items:
        - rabbitmq-server

    - command: rabbitmq-plugins enable rabbitmq_management
    - command: rabbitmqctl -q add_user {{ rabbitmq_username }} {{ rabbitmq_password }}
      ignore_errors: yes
    - command: "rabbitmqctl -q set_permissions -p / {{ rabbitmq_username }} '.*' '.*' '.*'"
      ignore_errors: yes

    - name: Python environment
      copy: src=../requirements.txt dest=/tmp/requirements.txt
    - pip:
        requirements: /tmp/requirements.txt

    - name: Clone Drastic Client
      git: repo=http://github.com/UMD-DRASTIC/drastic-cli.git dest={{ cli_dir }}
      tags: code

    - name: Install Drastic dependencies
      pip: requirements={{ cli_dir }}/requirements.txt

    - name: Install Drastic client
      pip: name='file://{{ cli_dir }}' state=forcereinstall
      tags: code

    - name: Deploy code
      copy: src=../{{ item }} dest={{ jobs_dir }} mode=0755 owner={{ runtime_user }}
      with_items:
        - jobs
        - index
        - begin_traverse.py
        - ingest_httpdir.py
        - count_httpdir.py
        - ingest_nara_series.py
        - listener.py
        - setup.py
      tags: code

    - name: Copy environment variables
      template: src=drastic-jobs-env.j2 dest=/etc/drastic-jobs-env

    - name: Add environment variables to shell
      copy: src=drastic-jobs-profile.sh dest=/etc/profile.d/drastic-jobs-profile.sh mode=0755

    - name: Install systemd services
      template: src=listener.service.j2 dest=/etc/systemd/system/listener.service
    - template: src=workers.service.j2 dest=/etc/systemd/system/workers-{{item.name}}.service
      with_items:
        - {name: default, workers: 1, queues: "default"}  # NOTE: cassandra result backend may fail if workeres increased..
        - {name: traversal, workers: 1, queues: "traversal"}
        - {name: notify, workers: 1, queues: "notify"}
    - template: src=flower.service.j2 dest=/etc/systemd/system/flower.service

    - systemd: name={{ item }} state=restarted enabled=yes daemon_reload=yes
      with_items:
        - workers-default
        - workers-traversal
        - workers-notify
      tags: code

    - systemd: name={{ item }} state=restarted enabled=yes daemon_reload=yes
      with_items:
        - listener
        - flower
