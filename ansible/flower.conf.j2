description "Workers reacts to data events via Python/Celery"
author "jansen@umd.edu"

start on runlevel [2345]
stop on runlevel [!2345]

# Celery's specific app definition
env APP=jobs.celery:app

env LOGLEVEL=DEBUG
env LOGFILE={{ jobs_dir }}/flower.log
env CLOWDER_URL={{ clowder_url }}
env CLOWDER_COMMKEY={{ clowder_commkey }}
env DRASTIC_URL={{ drastic_url }}
env CDMI_PROXY_URL={{ cdmi_proxy_url }}
env DRASTIC_USER={{ worker_drastic_user }}
env DRASTIC_PASSWORD={{ worker_drastic_password }}
env ELASTICSEARCH_URL={{ elasticsearch_url }}
env CLOWDER_AUTH_ENCODED={{ clowder_auth_plaintext | b64encode }}
env DAP_URL={{ dap_url }}
env DAP_AUTH_ENCODED={{ dap_auth_plaintext | b64encode }}

setuid ciber

# Try respawn a few times in case of errors, then bug out.
respawn
respawn limit 20 5

# Time to wait between TERM and KILL signals (relate this to your task execution time)
kill timeout 30

console output

chdir {{ jobs_dir }}
exec celery --app=${APP} flower --logfile=${LOGFILE} --loglevel=${LOGLEVEL} | logger -t celery-flower
